{
	"info": {
		"_postman_id": "fd1717ba-dbe7-4ef7-b9b0-2b5e577592cc",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос\r",
							"\r",
							"pm.test(\"2. Статус код 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"3. Проверить, что в body приходит правильный string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос\r",
							"\r",
							"pm.test(\"2. Статус код 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"\r",
							"pm.test(\"4. Проверить, что name в ответе равно name s request (name вбить руками)\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Jeff\");\r",
							"});\r",
							"\r",
							"pm.test(\"5. Проверить, что age в ответе равно age s request (age вбить руками)\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(\"40\");\r",
							"});\r",
							"\r",
							"pm.test(\"6. Проверить, что salary в ответе равно salary s request (salary вбить руками)\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(650);\r",
							"});\r",
							"\r",
							"// 7. Спарсить request\r",
							"var request = pm.request.body.formdata;\r",
							"\r",
							"pm.test(\"8. Проверить, что name в ответе равно name s request (name забрать из request)\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(request.get('name'));\r",
							"});\r",
							"\r",
							"pm.test(\"9. Проверить, что age в ответе равно age s request (age забрать из request)\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(request.get('age'));\r",
							"});\r",
							"\r",
							"pm.test(\"10. Проверить, что salary в ответе равно salary s request (salary забрать из request)\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(parseInt(request.get('salary')));\r",
							"});\r",
							"\r",
							"// 11. Вывести в консоль параметр family из response\r",
							"console.log(pm.response.json().family)\r",
							"\r",
							"\r",
							"pm.test(\"12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\", function () {\r",
							"    var salary = parseInt(request.get('salary'));\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(salary * 4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Jeff",
							"type": "text"
						},
						{
							"key": "age",
							"value": "40",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "650",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос\r",
							"\r",
							"pm.test(\"2. Статус код 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// 4. Спарсить request\r",
							"var request = pm.request.url.query;\r",
							"\r",
							"pm.test(\"5. Проверить, что name в ответе равно name s request (name забрать из request)\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(request.get('name'));\r",
							"});\r",
							"\r",
							"pm.test(\"6. Проверить, что age в ответе равно age s request (age забрать из request)\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(request.get('age'));\r",
							"});\r",
							"\r",
							"pm.test(\"7. Проверить, что salary в ответе равно salary s request (salary забрать из request)\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(parseInt(request.get('salary')));\r",
							"});\r",
							"\r",
							"// 8. Вывести в консоль параметр family из response\r",
							"console.log(jsonData.family)\r",
							"\r",
							"pm.test(\"9. Проверить, что у параметра dog есть параметры name\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.any.keys('name');\r",
							"});\r",
							"\r",
							"pm.test(\"10. Проверить, что у параметра dog есть параметры age\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.any.keys('age');\r",
							"});\r",
							"\r",
							"pm.test(\"11. Проверить, что параметр name имеет значение Luky\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql('Luky');\r",
							"});\r",
							"\r",
							"pm.test(\"12. Проверить, что параметр age имеет значение 4\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Jeff&age=40&salary=650",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Jeff"
						},
						{
							"key": "age",
							"value": "40"
						},
						{
							"key": "salary",
							"value": "650"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос\r",
							"\r",
							"pm.test(\"2. Статус код 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// 4. Спарсить request\r",
							"var request = pm.request.url.query;\r",
							"console.log(request)\r",
							"\r",
							"pm.test(\"5. Проверить, что name в ответе равно name s request (name забрать из request)\", function () {\r",
							"    console.log(request)\r",
							"    pm.expect(jsonData.name).to.eql(request.get(\"name\"));\r",
							"});\r",
							"\r",
							"pm.test(\"6. Проверить, что age в ответе равно age из request (age забрать из request)\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(parseInt(request.get(\"age\")));\r",
							"});\r",
							"\r",
							"// 7. Вывести в консоль параметр salary из request\r",
							"console.log(request.get(\"salary\"))\r",
							"\r",
							"// 8. Вывести в консоль параметр salary из response\r",
							"console.log(jsonData.salary)\r",
							"\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response\r",
							"console.log(jsonData.salary[0])\r",
							"\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response\r",
							"console.log(jsonData.salary[1])\r",
							"\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response\r",
							"console.log(jsonData.salary[2])\r",
							"\r",
							"pm.test(\"12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request)\", function () {\r",
							"    pm.expect(jsonData.salary[0]).to.eql(parseInt(request.get(\"salary\")));\r",
							"});\r",
							"\r",
							"pm.test(\"13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request)\", function () {\r",
							"    pm.expect(parseInt(jsonData.salary[1])).to.eql(parseInt(request.get(\"salary\") * 2));\r",
							"});\r",
							"\r",
							"pm.test(\"14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request)\", function () {\r",
							"    pm.expect(parseInt(jsonData.salary[2])).to.eql(parseInt(request.get(\"salary\") * 3));\r",
							"});\r",
							"\r",
							"// 15. Создать в окружении переменную name\r",
							"// 16. Создать в окружении переменную age\r",
							"// 17. Создать в окружении переменную salary\r",
							"// 18. Передать в окружение переменную name\r",
							"// 19. Передать в окружение переменную age\r",
							"// 20. Передать в окружение переменную salary\r",
							"\r",
							"var inv_name = pm.environment.set(\"name\", \"Jeff\")\r",
							"var inv_age = pm.environment.set(\"age\", 40)\r",
							"var inv_salary = pm.environment.set(\"salary\", 650)\r",
							"\r",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary\r",
							"for(i of jsonData.salary) {\r",
							"    console.log(i);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Jeff&age=40&salary=650",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Jeff"
						},
						{
							"key": "age",
							"value": "40"
						},
						{
							"key": "salary",
							"value": "650"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Вставить параметр salary из окружения в request\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"\r",
							"// 4. Отправить запрос\r",
							"pm.test(\"5. Статус код 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 6. Спарсить response body в json\r",
							"var response = pm.response.json();\r",
							"\r",
							"// 7. Спарсить request\r",
							"var request = request.data;\r",
							"\r",
							"pm.test(\"8. Проверить, что json response имеет параметр start_qa_salary\", function () {\r",
							"    pm.expect(response).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"9. Проверить, что json response имеет параметр qa_salary_after_6_months\", function () {\r",
							"    pm.expect(response).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"10. Проверить, что json response имеет параметр qa_salary_after_12_months\", function () {\r",
							"    pm.expect(response).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(response).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(response).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"13. Проверить, что json response имеет параметр person\", function () {\r",
							"    pm.expect(response).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request)\", function () {\r",
							"    pm.expect(response.start_qa_salary).to.eql(parseInt(request.salary));\r",
							"});\r",
							"\r",
							"pm.test(\"15. Проверить, что параметр qa_salary_after_6_months равен salary * 2 из request (salary забрать из request)\", function () {\r",
							"    pm.expect(response.qa_salary_after_6_months).to.eql(request.salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"16. Проверить, что параметр qa_salary_after_12_months равен salary * 2.7 из request (salary забрать из request)\", function () {\r",
							"    pm.expect(response.qa_salary_after_12_months).to.eql(request.salary * 2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request)\", function () {\r",
							"    pm.expect(response[\"qa_salary_after_1.5_year\"]).to.eql(request.salary * 3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"18. Проверить, что параметр qa_salary_after_3.5_years равен salary * 3.8 из request (salary забрать из request)\", function () {\r",
							"    pm.expect(response[\"qa_salary_after_3.5_years\"]).to.eql(request.salary * 3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request)\", function () {\r",
							"    pm.expect(response.person.u_name[1]).to.eql(parseInt(request.salary));\r",
							"});\r",
							"\r",
							"pm.test(\"20. Проверить, что что параметр u_age равен age из request (age забрать из request)\", function () {\r",
							"    pm.expect(response.person.u_age).to.eql(parseInt(request.age));\r",
							"});\r",
							"\r",
							"pm.test(\"21. Проверить, что параметр u_salary_5_years равен salary * 4.2 из request (salary забрать из request)\", function () {\r",
							"    pm.expect(response.person.u_salary_5_years).to.eql(parseInt(request.salary * 4.2));\r",
							"});\r",
							"\r",
							"// 22. *** Написать цикл, который выведет в консоль по порядку элементы списка из параметра person\r",
							"for(i in response.person) {\r",
							"    console.log(i)\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}